name: Release to Google Play

on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed

jobs:
  release-to-google-play:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create '.env' File from Secret
        run: echo $SECRETS_FILE_CONTENTS | base64 -d > env/.env
        env:
          SECRETS_FILE_CONTENTS: ${{ secrets.ENV_BASE64 }}

      - name: Create 'google-services.json' File from Secret
        run: echo $SECRETS_FILE_CONTENTS | base64 -d > android/app/google-services.json
        env:
          SECRETS_FILE_CONTENTS: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 2.10.3
          channel: stable
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Download pub dependencies
        run: flutter pub get

      - name: Build generated code
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties

      - name: Build Android App Bundle
        run: flutter build appbundle

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Cache bundle dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Download bundle dependencies
        run: |
          gem install bundler:2.0.2
          bundle config path vendor/bundle
          bundle install

      - name: Release to Google Play (alpha)
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }} # shuld be added to the secrets
        run: |
          bundle exec fastlane supply \
          --aab build/app/outputs/bundle/release/app-release.aab \
          --track alpha

      - name: Send Slack Notification
        if: always()
        uses: ravsamhq/notify-slack-action@1.9.0
        with:
          status: ${{ job.status }}
          notification_title: 'The CI job *{workflow}* on {run_url} with author name `${{ github.event.head_commit.author.name }}` and commit message `${{ github.event.head_commit.message }}` has {status_message}'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>. Please check it @${{ github.event.head_commit.author.name }}'
          footer: 'Linked Repo <{repo_url}|{repo}>'
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_SLACK_ALERTS_WEBHOOK }}
