name: Push Test Build To Firebase App Distribution

on:
  workflow_dispatch:
  schedule:
    - cron: '0 14 * * 1-5'

jobs:
  push-to-fr-app-distribution:
    runs-on: ubuntu-latest
    steps:
      - name: Generate dropezy-ci Access Token
        uses: tibdex/github-app-token@v1.5.0
        id: generate_ci_token
        with:
          app_id: ${{ secrets.DROPEZY_CI_APP_ID }}
          private_key: ${{ secrets.DROPEZY_CI_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure Git to use dropezy-ci Access Token
        env:
          CI_TOKEN: ${{ steps.generate_ci_token.outputs.token }}
        run: |
          git config --global url."https://dropezy:${CI_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Create preprod '.env' File from Secret
        run: echo $SECRETS_FILE_CONTENTS | base64 -d > env/.env
        env:
          SECRETS_FILE_CONTENTS: ${{ secrets.PREPROD_ENV_BASE64 }}

      - name: Create preprod 'google-services.json' File from Secret
        run: echo $SECRETS_FILE_CONTENTS | base64 -d > android/app/google-services.json
        env:
          SECRETS_FILE_CONTENTS: ${{ secrets.PREPROD_GOOGLE_SERVICES_JSON_BASE64 }}

      - name: Create preprod 'service-key.json' File from Secret
        run: echo $SECRETS_FILE_CONTENTS > service-key.json
        env:
          SECRETS_FILE_CONTENTS: ${{ secrets.PREPROD_GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Setup Java
        uses: actions/setup-java@v3.3.0
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 2.10.5
          channel: stable
          cache: true
      
      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Download pub dependencies
        run: flutter pub get

      - name: Build generated code
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Download Preprod Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.PREPROD_ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.PREPROD_ANDROID_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.PREPROD_ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.PREPROD_ANDROID_KEY_ALIAS }}" >> android/key.properties

      - name: Create maps.properties
        run: |
          echo "mapsApiKey=${{ secrets.PREPROD_MAPS_API_KEY }}" > android/maps.properties

      - name: Build Android APK
        run: flutter build apk --build-number ${{ github.run_number }} --release --flavor preprod

      - name: Upload preprod artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.PREPROD_FIREBASE_APP_ID }}
          serviceCredentialsFile: service-key.json
          releaseNotesFile: release-notes.txt
          groups: developers, products
          file: build/app/outputs/flutter-apk/app-preprod-release.apk

      - name: Send Slack Notification
        if: always()
        uses: ravsamhq/notify-slack-action@1.9.0
        with:
          status: ${{ job.status }}
          notification_title: 'The CI job *{workflow}* on {run_url} with author name `${{ github.event.head_commit.author.name }}` and commit message `${{ github.event.head_commit.message }}` has {status_message}'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>. Please check it @${{ github.event.head_commit.author.name }}'
          footer: 'Linked Repo <{repo_url}|{repo}>'
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_SLACK_ALERTS_WEBHOOK }}
